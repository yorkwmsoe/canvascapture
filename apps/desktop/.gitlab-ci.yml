build-docker-desktop:
  stage: 🐋 docker
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -f $DESKTOP_BASE_PATH/Dockerfile -t $CI_REGISTRY_IMAGE/desktop
    - docker push $CI_REGISTRY_IMAGE/desktop

typecheck-desktop:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  needs: ['build-docker-desktop']
  stage: 🤞 test
  script:
    - pnpm typecheck

test-desktop:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: 🤞 test
  needs: ['build-docker-desktop']
  script:
    - pnpm coverage
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

release-desktop-windows:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: 🚀 release
  script:
    - pnpm build:win
  artifacts:
    paths:
      - dist
  when: manual

release-desktop-mac:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: 🚀 release
  script:
    - pnpm install dmg-license
    - pnpm build:mac
  artifacts:
    paths:
      - dist
  when: manual

release-desktop-linux:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: 🚀 release
  script:
    - pnpm build:linux
  artifacts:
    paths:
      - dist
  when: manual
