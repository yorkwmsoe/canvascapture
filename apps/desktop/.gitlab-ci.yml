build-docker-desktop:
  stage: üêã docker
  image: docker:stable
  services:
    - docker:dind
  script:
    - cd $DESKTOP_BASE_PATH/
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -t $CI_REGISTRY_IMAGE/desktop
    - docker push $CI_REGISTRY_IMAGE/desktop
  only:
    changes:
      - $DESKTOP_BASE_PATH/Dockerfile

typecheck-desktop:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: ü§û test
  script:
    - pnpm typecheck

test-desktop:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: ü§û test
  script:
    - pnpm coverage
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

release-desktop-windows:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: üöÄ release
  needs: ['install-desktop']
  script:
    - cd $DESKTOP_BASE_PATH/
    - npm run build:win
  artifacts:
    paths:
      - $DESKTOP_BASE_PATH/dist/
  when: manual

release-desktop-mac:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: üöÄ release
  needs: ['install-desktop']
  script:
    - cd $DESKTOP_BASE_PATH/
    - npm i dmg-license
    - npm run build:mac
  artifacts:
    paths:
      - $DESKTOP_BASE_PATH/dist/
  when: manual

release-desktop-linux:
  image: $CI_REGISTRY_IMAGE/desktop:latest
  stage: üöÄ release
  needs: ['install-desktop']
  script:
    - cd $DESKTOP_BASE_PATH/
    - npm run build:linux
  artifacts:
    paths:
      - $DESKTOP_BASE_PATH/dist/
  when: manual
