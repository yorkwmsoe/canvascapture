stages:
    - üêã docker
    - üõû install
    - ‚úÖ check
    - ü§û test
    - üì¶ build
    - üöÄ release

variables:
    HUSKY: 0
    CLI_BASE_PATH: apps/cli
    DESKTOP_BASE_PATH: apps/desktop
    DOCUMENTATION_BASE_PATH: apps/documentation
    CI_REGISTRY_IMAGE_PATH: $CI_REGISTRY_IMAGE
    CI_PIPELINE_ID: $CI_PIPELINE_ID
    BASE_IMAGE: $CI_REGISTRY_IMAGE_PATH/base:latest
    CLI_IMAGE: $CI_REGISTRY_IMAGE_PATH/cli:latest
    DESKTOP_IMAGE: $CI_REGISTRY_IMAGE_PATH/desktop:latest

include:
    - local: .docker-ci.yml
    - local: apps/cli/.gitlab-ci.yml
    - local: apps/desktop/.gitlab-ci.yml
    - local: canvas-capture/.gitlab-ci.yml

install-packages:
    image: $BASE_IMAGE
    stage: üõû install
    script:
        # Install packages for all apps
        - pnpm install
        # Build packages for all apps
        - pnpm package
        # Symlink packages for all apps
        - pnpm install
    artifacts:
        paths:
            - node_modules/
            - canvas-capture/node_modules/
            - canvas-capture/dist/
            - apps/*/node_modules/

check-format:
    image: $BASE_IMAGE
    needs: ['install-packages']
    stage: ‚úÖ check
    script:
        - pnpm format:check

check-lint:
    image: $BASE_IMAGE
    needs: ['install-packages']
    stage: ‚úÖ check
    script:
        - pnpm lint

cache:
    paths:
    - .cache/
    - $DOCUMENTATION_BASE_PATH/public

pages:
    image: $BASE_IMAGE
    stage: üöÄ release
    needs: ['install-packages']
    script:
        - pnpm documentation build:gitlab
        - mv $DOCUMENTATION_BASE_PATH/public public
    artifacts:
        paths:
            - public
    when: manual